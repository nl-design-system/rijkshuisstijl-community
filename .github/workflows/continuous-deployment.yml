name: Continuous Delivery

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  install:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v3.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

  lint:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v3.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: "Continuous Integration: lint"
        run: |
          pnpm run --if-present lint

  build:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v3.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: "Continuous Integration: build"
        env:
          BASE_URL: "/utrecht/"
        run: |
          pnpm run --if-present build

      - name: "Retain build artifact: storybook"
        uses: actions/upload-artifact@v4.3.1
        with:
          name: storybook
          path: packages/storybook/dist/
          retention-days: 1

  test:
    runs-on: ubuntu-latest
    needs: install

    steps:
      - name: Checkout branch
        uses: actions/checkout@v4.1.1

      - name: Install pnpm package manager
        uses: pnpm/action-setup@v3.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: "Continuous Integration: test"
        run: |
          pnpm run --if-present test

  publish-website:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4.1.1

      - name: "Restore build artifact: Storybook"
        uses: actions/download-artifact@v4.1.4
        with:
          name: storybook
          path: packages/storybook/dist/

      - name: Continuous Deployment to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4.5.0
        with:
          branch: gh-pages
          folder: packages/storybook/dist/
          token: ${{ secrets.GH_TOKEN }}

  publish-npm:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout release branch
        uses: actions/checkout@v4.1.1
        with:
          token: ${{ secrets.GH_TOKEN }}

      - name: Install pnpm
        uses: pnpm/action-setup@v3.0.0

      - name: Set up Node.js version
        uses: actions/setup-node@v4.0.2
        with:
          node-version-file: .nvmrc
          cache: pnpm

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - name: "Continuous Deployment: install"
        run: |
          pnpm install --frozen-lockfile
          pnpm ls --recursive

      - name: "Continuous Deployment: build"
        run: |
          pnpm run --if-present build

      - name: "Continuous Deployment: publish to GitHub repository"
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_AUTHOR_EMAIL }}
          GIT_AUTHOR_NAME: "NL Design System"
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_COMMITTER_EMAIL }}
          GIT_COMMITTER_NAME: "NL Design System"
        run: |
          git push --set-upstream origin HEAD
          pnpm run release

      - name: "Continuous Deployment: publish to npm"
        env:
          HUSKY: 0
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          pnpm config set "@rijkshuisstijl-community:registry" "https://registry.npmjs.org/"
          pnpm config set "//registry.npmjs.org/:_authToken" "${NPM_TOKEN}"
          pnpm run publish
          pnpm config delete "//registry.npmjs.org/:_authToken"
